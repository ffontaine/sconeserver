<?xml version="1.0" ?>
<article title="Modules">

<subs>
mod_sconeserver
mod_router
mod_simple
mod_stat
mod_http
mod_ssl
</subs>

<!-- ----+---------+---------+---------+---------+---------+---------+----- -->
<content>

<p>
In order for SconeServer to do anything useful, you need to load at least one
module to handle the incoming connections. The way that this works is 
extremely flexible, with each connection type having a list of modules that 
will be notified.
</p>

<a name='configuration'></a>
<h2>Configuration</h2>

<p>
All modules present the following interface in SconeScript:
</p>

  <div class='scr-obj'>
  <h4>
  name : <em>string</em>
  </h4>
  <p>
  The name of the module
  </p>
  </div>

  <div class='scr-obj'>
  <h4>
  version : <em>version tag</em>
  </h4>
  <p>
  The current version of the module.
  </p>
  </div>

  <div class='scr-obj'>
  <h4>
  info : <em>string</em>
  </h4>
  <p>
  Module information, should include name, version, list of authors and a brief
  explanation of its function.
  </p>
  </div>

  <div class='scr-obj'>
  <h4>
  loadtime : <em>string</em>
  </h4>
  <p>
  Date/time when the module was loaded.
  </p>
  </div>

<h3>Sub-modules</h3>

  <div class='scr-obj'>
  <h4>
  insmod (
    <span>module-name : <em>string</em>, </span>
    <span>delay-load :  <em>boolean</em> </span>
  )
  </h4>
  <p>
  Inserts the module "module-name" as a sub-module. If "delay-load" is true, 
  don't attempt to load the module until it is referenced.
  </p>
  </div>
  
  <div class='scr-obj'>
  <h4>
  rmmod (
    <span>module-name : <em>string</em> </span>
  )
  </h4>
  <p>
  Removes sub-module "module-name".
  </p>
  </div>

  <div class='scr-obj'>
  <h4>
  lsmod : <em>string</em>
  </h4>
  <p>
  List of current sub-modules.
  </p>
  </div>

  <div class='scr-obj'>
  <h4>
  &lt;module-name&gt; : <em>module</em>
  </h4>
  <p>
  Looks-up sub-module given by &lt;module-name&gt;.
  </p>
  </div>

<h3>Logging</h3>

  <div class='scr-obj'>
  <h4>
  set_log (
    <span>file-name : <em>string</em> </span>
  )
  </h4>
  <p>
  Use the specified file to write log messages for this module.
  </p>
  </div>

  <div class='scr-obj'>
  <h4>
  log (
    <span>message : <em>string</em> </span>
  )
  </h4>
  <p>
  Output message to log.
  </p>
  </div>

<h3>Configuration</h3>

  <div class='scr-obj'>
  <h4>
  load_config (
    <span>file-name : <em>string</em> </span>
  )
  </h4>
  <p>
  Load configuration from the specified file.
  </p>
  </div>

  <div class='scr-obj'>
  <h4>
  set_mod_path (
    <span>path : <em>string</em> </span>
  )
  </h4>
  <p>
  Set path in which to look for sub-modules.
  </p>
  </div>

  <div class='scr-obj'>
  <h4>
  mod_path : <em>string</em>
  </h4>
  <p>
  The current path in which to look for sub-modules.
  </p>
  </div>

  <div class='scr-obj'>
  <h4>
  set_conf_path (
    <span>path : <em>string</em> </span>
  )
  </h4>
  <p>
  Set path in which to look for configuration files.
  </p>
  </div>

  <div class='scr-obj'>
  <h4>
  conf_path : <em>string</em>
  </h4>
  <p>
  The current path in which to look for configuration files.
  </p>
  </div>

  <div class='scr-obj'>
  <h4>
  set_var_path (
    <span>path : <em>string</em> </span>
  )
  </h4>
  <p>
  Set path in which to read/write state information.
  </p>
  </div>

  <div class='scr-obj'>
  <h4>
  var_path : <em>string</em>
  </h4>
  <p>
  The current path in which to read/write state information.
  </p>
  </div>



<h2>Standard modules</h2>

<p>
These are distributed along with the SconeServer package:
</p>

<?WMG
# Go through each module (in the modules subdir) and print description

foreach my $sub (@{$src->{SUBS}}) {
  my $href = $sub->{name}.".html";
  print "<h3><a href='$href'>".($sub->{short} || $sub->{title})."</a></h3>\n";
  print "<p>\n".$sub->{description}."\n</p>\n";
}
?>

<h2>Third party modules</h2>

<p>
None (yet!)
</p>

</content>
<!-- ----+---------+---------+---------+---------+---------+---------+----- -->

</article>
