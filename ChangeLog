
2013-02-26 Andrew Wedgbury <wedge@sconemad.com>

	* sconex/Logger: Asynchronous logging - log entries are now queued for
	writing in a separate thread to avoid blocking the worker thread(s).

2013-02-21 Andrew Wedgbury <wedge@sconemad.com>

	* sconex/ModuleLoader: Fold ModuleLoaderDLL into here.
	Parse modconf files and store dependency info.
	Run conf file on module load.
	* sconex/Module: Remove conf_path, autoload, and delay load options.
	Add load_module_dir - run_parts-style module loading using conf
	directory with dependency information.
	* sconex/Kernel: Add conf_path and autoload option.
	* http/getfile: Remove module, move to http/GetFileStream.
	* http/dirindex: Remove module, move to http/DirIndexStream.
	* http/errorpage: Remove module, move to http/ErrorPageStream.
	* sconesite/image: Move module to toplevel.
	* all: Add module .conf files, installed to conf_path/modules.d.

2013-02-13 Andrew Wedgbury <wedge@sconemad.com>

	* sconesite/Template: Set parent element (fixes logging).
	* sconesite/XMLDoc: Parse scx PI nodes into script statements on open,
	so we don't have to do this every time the file is processed.
	* sconesite/RenderMarkup: Support HTML5 output, use parsed script data.
	* sconex/ScriptStatement: Add debug output when running statements.
	Allow env to be set on groups. Fix bug when copying subroutines.
	* sconex/WikiTextArticleBody: Fix modtime handling.

2013-02-03 Andrew Wedgbury <wedge@sconemad.com>

	* sconex/ScriptBase, http, sconesite: Improve context in log output.

2013-01-31 Andrew Wedgbury <wedge@sconemad.com>

	* sconesite/Profile: Pass dbtype on construction.
	* sqlite/SQLiteProfile: Permit multiple queries on single profile.
	This may cause problems but will have to test properly.
	* sconex/ScriptExpr: Reduce log level for standard type registration.
	* sconed: Attempt to fix modpath/libdir inconsistency with deb pkgs.

2013-01-28 Andrew Wedgbury <wedge@sconemad.com>

	* sqlite: New Database provider module supporting SQLite.

2011-12-05 Andrew Wedgbury <wedge@sconemad.com>

	* sconesite/ArticleBody: Add ArticleBody provider API, refactor.
	* sconesite/Template: Refactor.
	* sconesite/XMLDoc: Refactor.
	* sconesite/Article: Create ArticleBodies using provider.
	* sconesite/SconesiteModule: Provide XML and Wiki ArticleBodies.
	* sconesite/WikiTextArticleBody: New WikiText ArticleBody (outline).

2011-10-19 Andrew Wedgbury <wedge@sconemad.com>

	* sconed: Add man page.
	* sconex/ScriptTypes: Fix ScriptSub recursion by running subroutines
	in a local copy of the ScriptStatement.

2011-08-03 Andrew Wedgbury <wedge@sconemad.com>

	* ui: Refactor into Display and Window objects, event handling.

2011-06-29 Andrew Wedgbury <wedge@sconemad.com>

	* sconex/Module: Remove unused ref() method.
	* sconex/TermBuffer: Add debug if tc calls fail.
	* server/ServerModule: Create ConfigStream objects properly.

2011-06-25 Andrew Wedgbury <wedge@sconemad.com>

	* sconex/Kernel: Tidy up kernel interface, pass app name and version.

	* all: Remove unused second argument from kernel connect() calls.
	* sconed: Simplify using new kernel interface.
	* ui: Outline experimental new User Interface module.

2011-06-25 Andrew Wedgbury <wedge@sconemad.com>

	* all: Changes to make libsconex an independent application framework:
	Make module entry point macro more generic SCONEX_MODULE.
	* sconex/Kernel: Change sconeserver to sconex.
	* sconex/ModuleInterface: Change SconeServer_module to sconex_module.
	* sconex/ModuleLoaderDLL: Change SconeServer_module to sconex_module.

2011-06-25 Andrew Wedgbury <wedge@sconemad.com>

	* sconex/Provider: Allow multiple providers for a particular type,
	where the last one registered is used.
	* sconex/ScriptExpr: Allow int and real literal types to be set.
	Support constants in standard context.
	* sconex/ConfigStream: Add set_int_type and set_real_type commands.
	* sconex/ScriptTypes: Relax arg type rules for list and map lookup.
	Add static create() methods for use by providers.
	Add ScriptNum type as intermediate base for ScriptInt and ScriptReal.
	* sconex/ScriptBase: Add operator= for ScriptRefTo.
	* http/AuthRealmDB: Use DB type from arguments (was hardcoded MySQL).
	* sconex/UnitTester: Add test_script_op fns (from ScriptTypes_ut.cpp).
	* sconex/Module: Fix module unloading.
	* mysql/MySqlQuery: Treat ScriptNum types as MYSQL_TYPE_DOUBLE.
	* maths: New module with basic maths functionality.
	* maths/Num: SconeScript mathematical number using libmpfr & libgmp.

2011-06-02 Andrew Wedgbury <wedge@sconemad.com>

	* sconex/ScriptExpr: Add create_object() method to programatically
	create objects of registered standard types.
	* sconex/Database: Add DbProxy, a proxy object to a db row.
	* sconex/StreamDebugger: Handle failing to open debug file.
	* sconex/ScriptStatement: Fix error reporting and for-loop parser.
	Store line numbers in statements to improve error reporting.
	Add ScriptTracer, which tracks line numbers when running scripts.
	* sconex/ScriptEngine: Pass line numbers to statements.
	* sconex/ConfigFile: Use ScriptTracer, pass in file name.
	* sconex/StreamTokenizer: Remove SendReadable events (not sure?).
	* sconex/Module: Return ScriptError if module cannot be loaded.
	* sconex/Uri: Implement url encode method properly.
	* http/AuthRealm: Refactor and introduce new realm provider API for
	dynamically adding to the available realm types.
	* http/AuthRealmHtpasswd: Rebrand existing realm system as
	htpasswd realm provider.
	* http/AuthRealmDB: New realm provider using database storage.
	* http/Client: Use create_object() to create IpSocketAddress.
	* sconesite/RenderMarkup: Add urlencode and urldecode script methods.
	* sconesite/Context: Generalise to ArticleBody in place of XMLDoc.
	* mysql/MySqlProfile: Set reconnect flag on connections.
	* mysql/MySqlQuery: Return NULL as a ScriptError.
	* local/LocalSocketAddress: Fix signature for script_op method.
	* bluetooth/BluetoothSocketAddress: Fix signature for script_op method.
	* ip/IpSocketAddress: Fix signature for script_op method.
	* ip6/Ip6SocketAddress: Fix signature for script_op method.

2011-05-18 Andrew Wedgbury <wedge@sconemad.com>

	* sconex/Stream: Remove module refs and add_module_ref() method.
	* all: Replace use of add_module_ref with explcit module references.
	* all: Make sure script objects provided by modules hold an explicit
	reference to the providing module where appropriate.
	* sconex/Module: close() now returns bool, where false indicates the
	module cannot be unloaded right now.
	* all: Implement close() method for modules that need it.
	* sconex/Kernel: Retry module unloading.
	* sconex/Thread: Grab mutex when signaling exit (why does this fix it?)
	* sconex/FilePath: Add pop() method and write unit test.
	* sconex/Mutex: Improve RWLock (was ReaderWriterLock), add RWLocker.
	* sconesite/Profile: Implement create,remove,rename article methods.
	Implement proper locking for article cache using improved RWLock.
	Purge cached articles after access time exceeds threshold.
	* sconesite/Article: Store access time, allowing get and reset.

2011-05-09 Andrew Wedgbury <wedge@sconemad.com>

	* all: Include sconex headers with system includes,
	another big change!
	* sconesite: Moved from http/sconesite.
	* sconex/Module: Add run-parts - runs all conf files in a directory.

2011-05-05 Andrew Wedgbury <wedge@sconemad.com>

	* all: Rename SconeScript "Arg..." base classes to "Script...", as
	that makes more sense. This is quite a big change!
	* sconex/ScriptBase: ScriptObject replaces Arg, with ScriptRef as a
	ref counting smart pointer (ref is held by the ScriptObject).
	* sconex/ScriptTypes: Standard Script types moved here.
	* sconex/ScriptExpr: Was ArgProc, added multiple context lookup,
	standard context with type provider registration.
	* sconex/ScriptEngine: Was ArgScript.
	* sconex/ScriptStatement: Was ArgStatement.
	* sconex/ArgObject: Removed, all ArgObjectInterface classes now derive
	directly from ScriptObject.
	* sconex/ModuleRef: Removed, ScriptRef takes over this functionality.
	* sconex/Process: Fix non-serious compiler warnings.
	* sconex/Stream: Add stream provider registration.
	* sconex/Module: Remove connect method (now use stream provider API).
	* sconex/Kernel: Move standard script ctors to standard context.
	* sconex/Date: Store timeval to give microsecond-precision dates.
	* sconex/Time: Store timeval to give microsecond-precision times.
	* sconex/Logger: Output microseconds in log.
	* mysql: Was dbsql, improve using new Database provider API.
	* server: Was router, rename to make more sense, use stream providers.
	* stat: Refer to stat types by name to allow further expansion.
	* ip: Moved from router/ip.
	* ip6: Moved from router/ip6.
	* local: Moved from router/local.
	* bluetooth: Moved from router/bluetooth.
	* rss: Moved from http/sconesite/rss.

2011-02-29 Andrew Wedgbury <wedge@sconemad.com>

	* sconex/TermBuffer: Handle ^D, use proper constants for keycodes.
	* sconex/Multiplexer: Method to enable/disable jobs.
	* sconex/ModuleLoaderDLL: Report dlopen errors when loading modules.
	* sconex/Provider: New experimental service-provider API.
	* sconex/Database: Neutral database provider interface.
	* dbsql: Per-profile connection pooling, use provider API.
	* autoconf.sh: Update to work with latest autotools.

2010-11-05 Andrew Wedgbury <wedge@sconemad.com>

	* http/PartialResponseStream: HTTP Range request handler.
	* http/ConnectionStream: Use above stream for range requests.

2010-10-15 Andrew Wedgbury <wedge@sconemad.com>

	* configure: Update version to 0.9.0.
	* debian: Change pkglibdir to libdir.
	* doc/examples: Relocate dir to (root)/examples, remove doc.
	* sconex/IOBase: New common base for Descriptor and Stream.
	* sconex/Descriptor: Derive from IOBase.
	Correct virtual event maps to event_mask in get_event_mask.
	* sconex/DatagramChannel: Fix event update in endpoint_read.
	* sconex/Stream: Derive from IOBase.
	* sconex/Date: Correct tz handling in operator+ and -.
	* sconex/Time: Arg return hours & minutes as ArgReal.
	* tftp: Fix this module so it basically works!

2010-10-13 Andrew Wedgbury <wedge@sconemad.com>

	* debian: Add required files for creating Debian packages.

2010-10-06 Andrew Wedgbury <wedge@sconemad.com>

	* image: Fix header paths following sconesite reolcation.

2010-08-22 Andrew Wedgbury <wedge@sconemad.com>

	* rss/Feed: Fix segfault with invalid RSS feed data.
	* sconesite/XMLDoc: Fix lockup with concurrent open calls.


2010-08-17 Andrew Wedgbury <wedge@sconemad.com>

	* sconex/ModuleLoaderDLL: Fix segfault when module not found.

2010-08-12 Andrew Wedgbury <wedge@sconemad.com>

	* sconex/Date: Replace local flag with timezone.
	* sconex/Time: Allow arg construction for TimeZone.
	* sconex/Kernel: Hookup TimeZone arg constructor.

2010-08-12 Andrew Wedgbury <wedge@sconemad.com>

	* sconex/ArgProc: Fix rare segfault with short ops.

2010-08-12 Andrew Wedgbury <wedge@sconemad.com>

	* configure: Tidy CXXFLAGS, add mode for valgrind.
	* sconex/Makefile: Set library version number to 1.
        * router/RouterChain: Fix leaked listener args.
        * rss/Feed: Free xmlDoc using proper function.
	* all: Tidy example configuration files.

2010-08-10 Andrew Wedgbury <wedge@sconemad.com>

	* smtp/SMTPModule: Pass args to Client constructor.
	Allow server process/address to be set.
	* smtp/SMTPClient: Restructure, use buffered write.
	Support for Subject, From, To, Cc, Bcc, Message Id, etc.
	* sconex/Process: Add parse_command_line helper.
	* testbuilder/BuildStep: Use Process::parse_command_line().
	* sconex/User: Fix current() to get effective user.
	* sconex/Module: Delete modules in reverse, fixes ref bug.

2010-08-04 Andrew Wedgbury <wedge@sconemad.com>

	* http/Client: Support http and https connection via proxy.
	* http/HTTPModule: Add client proxy server setting.
	* smtp: New experimental SMTP module (client only).

2010-08-03 Andrew Wedgbury <wedge@sconemad.com>

	* ssl/SSLStream: Check for non existent channels.
	* http/Client: 	Turn into an Arg class.
	Add Content-Type header when there is data.
	* http/HTTPModule: Allow client object construction.

2010-07-30 Andrew Wedgbury <wedge@sconemad.com>

	* sconex/StreamSocket: Add client flag, blocking connect.
	* ssl/SSLModule: Support client mode channels.
	* ssl/SSLChannel: Support client mode.
	* ssl/SSLStream: Tidy up, support client mode connections.
	* http/MessageStream: Use case-insensitive check for
	Connection: close header.
	* http/Request: Allow requests to be built for clients.
	* http/Response: Parse responses and access values.
	* http/Client: New http client system.

2010-07-27 Andrew Wedgbury <wedge@sconemad.com>

	* dbsql/DbSqlQuery: New API, results are now fetched one
	row at a time, accessed by column name.

2010-07-21 Andrew Wedgbury <wedge@sconemad.com>

	* dbsql/DbSqlQuery: Handle MySQL blob type.
	* dbsql/DbSqlProfile: Parse host:port:db from db string.

2010-07-21 Andrew Wedgbury <wedge@sconemad.com>

	* sconex/Date: Refactor string parsing, allow for args.
	* dbsql/DbSqlQuery: Use prepared statements.
	Implement MySQL parameter/result to arg binding system.

2010-07-15 Andrew Wedgbury <wedge@sconemad.com>

	* sconex/Uri: Fix bug where there is a query but no path.
	* sconesite/RenderMarkup: Initialise inhibit state properly.

2010-07-14 Andrew Wedgbury <wedge@sconemad.com>

	* sconesite: Relocate from root to http subdirectory.
	* sconesite/rss: New RSS/Atom feed (client) module.
	* http/Session: Clean up job name and timeout.
	* sconesite/SconesiteModule: Clean up job name and timeout.
	* sconesite/RenderMarkup: Support multiple options in
	process_article(). Add base_url option for links.
	* sconex/Uri: Add base() method for getting base part of Uri.
	* sconex/ModuleLoaderDLL: Improve dev mode module searching.
	* all: Rationalise module naming, now same as directory.

2010-05-21 Andrew Wedgbury <wedge@sconemad.com>

	* getfile, dirindex, errorpage, sconesite: Improve logging.
	* http/ResponseStream: Remove unused html_esc method.
	* testbuilder/ControlStream: Use escape_html from scx::utils.
	* exec/ExecModule: Add exec and system arg methods.
	* sconex/Process: Reinstall SIGCHLD handler in proxy process.
	* sconex/RenderMarkup: Stop print from writing empty strings.
	Allow access to sconesite profile.
	* sconesite/Profile: Allow access to root path and index.

2010-05-18 Andrew Wedgbury <wedge@sconemad.com>

	* sconex/StreamTokenizer: Return error on overflow to prevent
	invalid state leading to segfault.
	Implement optional input line number tracking.
	* sconex/ArgScript: Allow handling of parser errors.
	* sconex/ArgStatement: Detect and return parser errors.
	* sconesite/RenderMarkup: Report script parser and exec errors.
	* sconesite/SconesiteStream: Implement a better logging method.

2010-05-07 Andrew Wedgbury <wedge@sconemad.com>

	* sconex/Process: Add verify_system_password() - util to check
	shadow password in root Proxy process using getspnam + crypt.
	* sconex/User: Add verify_password() method using above.
	* http/AuthRealm: Use system password if !system in htaccess.
	* sconesite/ArticleBody: Correct header anchor lookup bug.
	* sconesite/Article: Allow get_articles, get_all_articles and
	get_file arg methods without trusted authority.
	* configure: Check for shadow.h, check for libcrypt properly.

2010-05-05 Andrew Wedgbury <wedge@sconemad.com>

	* sconesite/Article: Implement name() method.
	* sconesite/SconesiteStream: Always use default template for
	security reasons, other template selection can be done from this.
	* sconesite/RenderMarkup: Add configurable autonumber setting.
	Auto add doctype and namespace for html elements.
	Correct default auth setting for script in articles (Untrusted).
	* sconesite/ArticleBody: Make heading anchors valid XML names.
	* sconesite/XMLDoc: Add utility function to test bool attributes.
	Handle entity reference nodes. Set "no net" parser option.

2010-04-29 Andrew Wedgbury <wedge@sconemad.com>

	* sconesite/ArticleBody: Move ArticleBody class to new file.
	* all: Rename all .conf files to .conf.example to prevent
	overwriting of existing conf files when reinstalling.
	* configure: Check for crypt.h header.
	* all: Update makefiles.

2010-04-28 Andrew Wedgbury <wedge@sconemad.com>

	* sconesite/image: Call InitializeMagick() when loading module.
	* sconesite/RenderMarkup: Use article href path in anchor links.
	Allow access to local_addr and remote_addr of output descriptor.
	* sconesite/XMLDoc: Add new base class for article bodies, and
	derive XMLDoc from this.
	* sconesite/Article: Separate out article body functionality.
	Add allow_access and allow_upload access check methods.
	* sconesite/Template: Allow derivation from ArticleBody.
	* sconesite/SconesiteStream: Restructure, build context earlier.
	Use new article access check methods.
	* http/AuthRealm: Read standard htpassword file format.
	Use crypt() to check passwords (DES format).

2010-04-22 Andrew Wedgbury <wedge@sconemad.com>

	* sconesite/XMLDoc: Try to make open operation more thread safe.
	Add handle_open and handle_close virtuals.
	Pass node private data to context.
	* sconesite/Article: Scan and store article headings.
	* sconesite/Context: Recieve node data from XML.
	* sconesite/RenderMarkup: Output section for article headings.
	Add exteral class for external links.
	* sconex/RegExp: Bug fix - increment refcount on construction.
	* scones/ArgTest: Make test arg method fail for BAD_ARGs or (int)0.
	* test/arg/regexp: New argtest script for RegExp.
	* sconex/Date: Remove erroneous tz adjustment in Date string ctor.

2010-04-07 Andrew Wedgbury <wedge@sconemad.com>

	* sconex/ArgScript: Fix parser to handle const and constref decls,
	and allow names that start with reserved words.
	* sconex/ArgStatement: Parse and store named subroutine arguments.
	* sconex/Arg: Use named arguments for ArgSub calls.
	Implement combination assignment ops: +=, -=, *= and /= and test.
	* sconex/Kernel: Add ref and constref as standard functions.

2010-04-01 Andrew Wedgbury <wedge@sconemad.com>

	* sconex/Arg: Expand SconeScript basic object methods:
	ArgString split, uc, lc; ArgList join, reverse, sort.
	Plus tests for above. Handle resolve Arg op in ArgMap.
	* sconex/ArgStatement: Add const declaration.
	* sconex/ArgScript: Support const and constref (not quite working).

2010-03-31 Andrew Wedgbury <wedge@sconemad.com>

	* sconex/Date: Add missing timezone adjustment to Arg constructor.
	* http/Session: Allow session timeout to be accessed.
	Reset session timeout on construction to avoid race condition.
	Improve generation of session IDs (a bit, still needs work).
	* http/DocRoot: Set expiry time for session cookies.
	* sconesite/Profile: Make into Arg interface class.
	Add purge_threshold parameter, use in call to article refresh.
	* sconesite/SconesiteModule: Arg access to profile sub-objects.
	* sconesite/XMLDoc: Implement purge method using threshold time.
	* sconesite/Article: Call purge method when refreshing.
	* sconesite/SconesiteStream: Fix leaked RenderMarkupContext from
	previous checkin.
	* sconed: Seed basic random number generator.

2010-03-29 Andrew Wedgbury <wedge@sconemad.com>

	* sconex/Descriptor: Make set_blocking() public, returning prev state.
	* http/MessageStream: Make response a simple member variable.
	* http/ResponseStream: Add stream_status() for debug info.
	* sconesite/RenderMarkup: Remove RenderMarkupJob as no longer used.
	No need to copy request/response objects as rendering now done in
	http message thread.
	Article section rendering support.
	* sconesite/SconesiteStream: Perform rendering in same thread, setting
	socket to blocking while this is done.
	Add stream_status().

2010-03-24 Andrew Wedgbury <wedge@sconemad.com>

	* sconex/ArgStore: Use NULL symbol when writing NULL or unknown args.
	* sconex/ArgProc: Recognise NULL symbol when evaluating.

2010-03-22 Andrew Wedgbury <wedge@sconemad.com>

	* sconesite/RenderMarkup: Stack up old statement groups to allow
	subroutines defined in completed templates to access context.

2010-03-18 Andrew Wedgbury <wedge@sconemad.com>

	* dbsql: Further refactoring.
	* sconex/utils: Fix escape_quotes() to handle quotes properly.
	* sconex/utils_ut: Add unit tests for all utils functions.

2010-03-04 Andrew Wedgbury <wedge@sconemad.com>

	* router/ip: Don't automatically lookup hostnames.
	* router/ip6: Don't automatically lookup hostnames.
	* sconesite/Article: Use recursive meta lookup in MetaSorter.

2010-02-24 Andrew Wedgbury <wedge@sconemad.com>

	* doc: Remove wmg generated doc - now maintained online.

2010-02-04 Andrew Wedgbury <wedge@sconemad.com>

	* dbsql: Use mysqlclient c lib instead of MySql++.
	* sconesite/SconesiteModule: Correct authorization check.

2010-02-03 Andrew Wedgbury <wedge@sconemad.com>

	* dbsql: New SQL Database interface module supporting MySQL.
	* configure: Add dbsql and check for MySql++ lib.
	* sconex/ConfigStream: Catch exceptions when evaluating.
	* sconesite/SconesiteModule: Check authorization for profile setup.

2010-01-29 Andrew Wedgbury <wedge@sconemad.com>

	* sconex/File: Allow permissions to be specified when creating.
	* sconex/FilePath: Allow permissions to be specified for copy.
	* sconex/FileStat: Allow access to file permissions (mode_t).
	* sconex/User: Reset umask when setting user/group ids.
	* sconex/ArgStore: Use 0660 mode for store files.
	* sconesite/SconesiteStream: Use 0660 mode for uploaded files.
	* sconesite/Article: Use 0770 mode for new article directories,
	and 0660 mode for files.

2010-01-26 Andrew Wedgbury <wedge@sconemad.com>

	* sconex/ArgScript: Split parsing into base class, and make a
	new derived class ArgScriptExec, which executes while parsing.
	* sconex/ArgStatement: Allow scope environment to be specified
	for statement groups.
	* sconesite/RenderMarkup: Use common environment across scx process
	instructions, allowing global vars and subroutines to be shared.
	* test/runargtests.sh: Find test scripts using relative path.
	* sconex/Arg_ut: Fix empty string test (should be int 0).

2010-01-18 Andrew Wedgbury <wedge@sconemad.com>

	* sconex/RegExp: New regular expression support using pcre.
	* configure: Add pcre as dependency, plus general tidy up.

2010-01-15 Andrew Wedgbury <wedge@sconemad.com>

	* sconesite/RenderMarkup: Add article base to internal href links.
	* http/Request: Add get_header arg method to allow header access.
	* router/RouterChain: Allow TermBuffers to be added to chains.
	* sconesite/Article: Fix leaked Arg in arg_lookup (title).
	* sconex/sconex: Update copyright year.

2009-12-21 Andrew Wedgbury <wedge@sconemad.com>

	* sconex/Module: Check authorization for base module methods.

2009-11-18 Andrew Wedgbury <wedge@sconemad.com>

	* http/HTTPModule: Set timeout on connect to kill sockets getting
	stuck at ssl open stage.

2009-11-16 Andrew Wedgbury <wedge@sconemad.com>

	* sconex/Descriptor: Check for errors and whatnot before allowing
	open waiting in dispatch().
	Fixes runaway "accept aborted" bug when using ssl.

2009-11-06 Andrew Wedgbury <wedge@sconemad.com>

	* configure: Use LDFLAGS for libMagick++.
	* sconex/Arg: Empty strings are now false.
	* sconex/Kernel: Add Arg base type constructors.
	Allow multiplexer loop latency to be configured.
	* sconex/Date: Add format method using strftime.
	* sconex/ArgObject: Allow assignment.
	* sconex/Multiplexer: Allow loop latency to be set.
	* sconesite/RenderMarkup: Add html escapes when writing article source.
	Allow processing of other articles.
	* sconesite/Article: Add lookup_article, lookup_meta.
	Add recursive get_articles method.
	Improve article sort specifier (use ! to reverse).
	* sconesite/ArgFile: Add size arg method.
	* http/HTTPModule: Allow idle timeout to be set.
	* http/ConnectionStream: Use idle timeout on sockets.

2009-10-15 Andrew Wedgbury <wedge@sconemad.com>

	* sconesite/image: New image manipulation module
	using Image/GraphicsMagick (libMagick++).
	* sconesite/Article: Add remove_file arg method.
	* sconesite/ArgFile: Move ArgFile class to own file.
	* all: Reduce some unneccecary linkage.

2009-10-15 Andrew Wedgbury <wedge@sconemad.com>

	* sconssite/Artice: Move update and file upload	processing to here.
	* sconesite/SconesiteStream: Add filename property to uploaded
	file object.
	* sconesite/RenderMarkup: Resolve via sconesite module to allow
	sub-modules to be picked up.

2009-10-14 Andrew Wedgbury <wedge@sconemad.com>

	* all: Global update: s/arg_function/arg_method/.
	* all: Improve ArgObject logging.
	* sconex/Descriptor: Don't build event mask for
	running descriptors (fixes an intermittent segfault).
	* sconex/Multiplexer: Calculate mean job wait time.
	* sconex/Uri: Move url decode routine to here.
	* http/DocRoot: Decode url paths.
	* http/ResponseStream: Move url decode from here.
	* sconesite: Move article list to Article, enabling
	articles to be linked in trees.

2009-10-12 Andrew Wedgbury <wedge@sconemad.com>

	* sconex/ArgStatement: Break out of loops on error.
	* sconex/ArgScript: Output only errors to error_des.
	* test/ArgTest: Set error descriptor.

2009-10-09 Andrew Wedgbury <wedge@sconemad.com>

	* sconex/Arg: Add method call ability to base Arg.
	* sconex/ArgObject: Remove ArgObjectFunction.
	* all: Remove use of ArgObjectFunction, replace with
	ArgObject using ArgObjectInterface::new_method().
	* sconex/Debug: Add DEBUG_LOG_ERRNO macro.
	* sconex/FilePath: Log errno for move failures.
	* http/DocRoot: Fix and simplify lookup methods.
	* sconesite/RenderMarkup: Remove list and map helpers.

2009-10-08 Andrew Wedgbury <wedge@sconemad.com>

	* sconex/Multiplexer: Add delay when starting threads
	to give them time to reach the wakeup condition wait.
	* sconex/VersionTag: Allow Arg assignment.
	* sconex/MimeType: Allow Arg assignment.
	* sconex/Uri: Allow Arg assignment.
	* sconex/FilePath: Add move and copy file utils.
	* sconex/FileDir: Prohibit assignment!
	* sconex/Multiplexer: Collect and display stats.
	* sconex/StreamTransfer: Make thread-safe (hopefully)
	by introducing a transfer manager.
	* http/Request: Detect param type by name prefix.
	* sconesite/RenderMarkup: Add list and map helpers
	* sconesite/Profile: Don't assign FileDir in refresh.
	* dirindex: Fix use of param arg for default_page.

2009-10-06 Andrew Wedgbury <wedge@sconemad.com>

	* sconex/ArgProc: Handle escape sequences in literals.
	Cleanup if exception occurs within op() calls.
	* sconex/utils: Add quote and html string escape utils.
	* sconex/ArgStore: Escape strings before writing.
	Factor out store_arg as static method allowing reuse.
	* sconex/VersionTag: Fix bug in get_string().
	* http/Session: Simplify by deriving from ArgStore.
	* http/AuthRealm: Simplify by deriving from ArgStore.
	* http/Request: Add plenty of comments.
	* http/MessageStream: Share Response object.
	* http/DocRoot: Fix leaked params.
	* dirindex: Fix leaked params from DocRoot.
	* sconesite/RenderMarkup: Add escaping methods.
	Receive Response object, deleting if required.
	* sconesite/Article: Fix leaked meta Args in sorter.

2009-10-02 Andrew Wedgbury <wedge@sconemad.com>

	* sconex/Arg: Tidy ref counting by making data private,
	access is now with last_ref and is_const methods.
	* sconex/Descriptor: Display events in debug output.
	* sconex/utils: type_name method to demangle RTTI names.
	* sconex/ConfigStream: Display type names.
	* sconex/ArgObject: Use type names in object strings.
	Interface classes don't all need name() methods.
	* sconex/Module: Add close() method to unload modules
	before destructor is called.
	* sconex/Thread: Improve thread shutdown sequence.
	* sconex/DatagramChannel: Fix possible leaked buffer.
	* sconex/Multiplexer: Add close method for shutdown.
	* sconex/Kernel: Shutdown app properly, call all dtors.
	* sconed: Delete kernel when exiting.
	* http/AuthRealm: Add HTTPUser for storing user details.

2009-10-01 Andrew Wedgbury <wedge@sconemad.com>

	* sconex/Arg: Use reference-counted storage scheme.
	* sconex/Module: Cleanup module info and copyrights.
	* sconex/ArgStatement: Add ref and const declarations.
	* sconex/ArgScript: Use dictionary map to match tokens.
	* all: Update Arg classes to use ref counted storage.
	Update arg methods to return data structures rather
	than formatted text output.

2009-09-28 Andrew Wedgbury <wedge@sconemad.com>

	* sconex/ArgProc: Use [] for lists - this eliminates
	confusion between 0, 1, and many item lists with ().
	* sconex/ArgObject: Pass unresolved to kernel.
	* sconex/Module: Don't use hierarchical resolution.
	Allow config filenames to be specified.
	* sconex/ArgStatement: Lookup before resolve.
	* all: Add Authority argument to all Arg::op and
	ArgObjectInterface::arg_function methods.

2009-09-25 Andrew Wedgbury <wedge@sconemad.com>

	* sconex/Multiplexer: Speed up end_job wait sequence.
	* sconex/Descriptor: Include timeout in describe string.
	Send Opening events to Listening descriptors.
	* sconex/Kernel: Move Arg ctors here.
	* sconex/Module: Allow resolution to parent modules.
	* sconex/ArgObject: Allow lookups with [] syntax.
	* http: Improve Arg interface for Host, DocRoot, etc.
	* sconesite/SconesiteModule: Add periodic refresh job.
	* lettuce/LettuceCommandStream: Increase timeout.

2009-09-24 Andrew Wedgbury <wedge@sconemad.com>

	* sconex/Multiplexer: Allow periodic job scheduling.
	Reduce polling and latency by interrupting select.
	* sconex/Job: New base class Job and JobThread.
	TimedJob base for periodic jobs.
	* sconex/Descriptor: Loop Opening/Closing events in
	dispatch if required to keep things moving.
	Improve descriptions for debug output.
	* sconex/Stream: Add event_status() for debug info.
	* sconed: Catch SIGUSR1 signals and don't abort.
	* http/Session: Add periodic job to cleanup sessions.
	* http/Request: Allow params of any Arg type.
	* sconesite/SconesiteStream: File upload to /tmp.

2009-09-23 Andrew Wedgbury <wedge@sconemad.com>

	* http/Session: Correct use of *_map::erase in iter loop.
	* sconesite/SconesiteStream: Check for dodgy paths.
	* sconex/TermBuffer: Clever command history buffer.

2009-09-22 Andrew Wedgbury <wedge@sconemad.com>

	* sconex/Multiplexer: Make into a generic job scheduler.
	* sconex/Descriptor: Add DescriptorJob.
	* sconex/DescriptorThread: Remove, use JobThread.
	* sconex/Kernel: Add add_job, use DescriptorJob.
	* sconesite/ThreadManager: Remove, use Multiplexer.
	* sconesite/WorkerThread: Moved to Multiplexer, JobThread.
	* sconesite/RenderMarkup: Return true to purge jobs.
	* sconesite/SconesiteStream: Use Multiplexer for jobs.

2009-09-22 Andrew Wedgbury <wedge@sconemad.com>

	* sconex/ArgProc: Allow escape sequences in strings.
	* sconex/ArgScript: Ignore escaped characters in parser.
	* sconex/ArgObject: Allow various arg types to be constructed.
	* sconex/Time: Add arg constructor.
	* sconex/Date: Add arg constructor.
        * sconex/TermBuffer: Use ansi colours and buffer lines.
	* sconed: Don't create new console when resetting.
	* http/HostMapper: Replace maps with aliases and redirects.
	Handle connect requests locally.
	* http/MessageStream: Pass connects on to host mapper.
	* sconesite/RenderMarkup: Never return NULL from lookup.
	Implement meta-sorting for get_articles arg method.
	* sconesite/Article: Implement ArticleMetaSort functor.

2009-09-21 Andrew Wedgbury <wedge@sconemad.com>

	* http/Session: Session manager thread safety.
	* http/DocRoot: Use ArgStore for docroot params.
	Use auto_session param to auto create http sessions.
	* sconesite/RenderMarkup: Add abort method to stop rendering.
	Check session is valid before it is returned.
	* sconex/ArgStatement: Implement script flow statements in
	SconeScript, i.e. return, break and continue.
	* sconex/ArgScript: Parse and create flow statements.
	* sconex/ArgObject: Move ref counting from Module.
	* sconex/Module: Move ref counting to ArgObjectInterface.
	* test: Improve arg forloop and sub testing.

2009-09-17 Andrew Wedgbury <wedge@sconemad.com>

	* configure: update version to 0.8.0, update NEWS.
	* all: Use typedefs for std::map and std::list types.
	Use unordered_map or hash_map where appropriate.
	define HASH_TYPE to indicate best hash-map type available.
	* test: Add shell script to auto run all arg test scripts.

2009-09-17 Andrew Wedgbury <wedge@sconemad.com>

	* sconex/ArgProc: Allow binary ops in nx mode, improve logging.
	* sconex/Arg: Make Arg return ArgError for unsupported ops.

2009-09-16 Andrew Wedgbury <wedge@sconemad.com>

	* http/Session: Add (missed from last checkin)
	* http/ResponseStream: Finally fix horrible boundary break bug.
	* sconesite/RenderMarkup: Prevent recursive article processing.
	* sconesite/XMLDoc: Capture and handle xml parser errors.
	* sconex/ArgStore: Add reset() method.

2009-09-16 Andrew Wedgbury <wedge@sconemad.com>

	* http/Session: New session object and session manager.
	* http/DocRoot: Use HTTP session cookies.
	* http/AuthRealm: Tidy and add management interface.
	* http/HTTPModule: Tidy, add session manager, move realm manager.
	* http/ResponseStream: (almost) fix horrible boundary break bug.
	Rewrite option processing and urldecode.
	Move option storage to Request (now called params).
	* sconex/Arg: Perl-style short circuit & and | ops for Arg.
	Allow base ops for ArgError.
	Add ArgString length and empty props.
	Allow object style member lookup for ArgMap.
	* sconex/ArgProc: Allow "short-circuit" parse with no exec mode.
	* sconex/ArgStore: New Arg persistent storage object.
	* sconex/Descriptor: Allow 0 byte writes with no error.
	* sconex/Debug: Improve instance counting system.
	* test/TestModule: Display extra instance counting info.
	* sconesite/SconesiteStream: Read posted multipart params.
	* sconesite/Article: Use ArgStore to store metadata.
	* sconesite/RenderMarkup: Provide access to session and realms.

2009-09-08 Andrew Wedgbury <wedge@sconemad.com>

	* sconesite/ThreadManager: New thread manager based on multiplexer.
	* sconesite/WorkerThread: New worker thread and job interface.
	* sconesite/RenderMarkup: New markup renderer context and job.
	* sconesite/SconesiteStream: Allocate jobs in thread manager.
	* sconesite/Context: Make abstract, move stuff into RenderMarkup.
	* sconesite/XMLDoc: Make into Arg class to allow scripting.
	* sconesite/Article: Add Arg interfaces.
	* http/Request: Add Arg properties for scripting.
	* http/ResponseStream: Fix bug where boundary is not detected.
	* sconex/Arg: Add size property to ArgList and make modifiable.
	New ArgMap associative array type.
	* sconex/ArgStatement: Use ArgMap to store vars in groups.
        * sconex/ArgProc: Construct ArgMap types using {} syntax.
	* sconex/FileDir: Reset current name at end of iteration.
	* sconex/Uri: Add Arg properties for scripting.
	* sconex/MemFile: Set descriptor states properly.

2009-08-28 Andrew Wedgbury <wedge@sconemad.com>

	* sconex/Buffer: Add resize method.
	* sconesite/Context: Make into Arg class to allow scripting.

2009-08-27 Andrew Wedgbury <wedge@sconemad.com>

	* sconex/MimeHeader: Move line parsing into here from http::Request.
	* sconesite: Linking against libxml2 for XML parsing.
	* sconesite/XMLDoc: New base class XML document parser.
	* sconesite/Article: New article class.
	* sconesite/Template: New doc template class.
	* sconesite/Profile: New site profile, holds templates and articles.
	* sconesite/Context: New xml processing context base class.

2009-08-12 Andrew Wedgbury <wedge@sconemad.com>

	* http/ResponseStream: Tidy and improve encapsulation, and
	integrate mime section header parsing.

2009-06-19 Andrew Wedgbury <wedge@sconemad.com>

	* http/MessageStream: Tidy up using request and new response class.
	Add GET_HTTP_MESSAGE macro and use throughout.
	* http/Response: New class to encapsulate http response data.

2009-06-17 Andrew Wedgbury <wedge@sconemad.com>

	* http/AuthRealm: Implement basic HTTP authorization realms.
	* sconex/Base64: Base64 encoding/decoding utility.
	* ssl: Implement callbacks required for OpenSSL thread safety.
	* http/DocRoot: Add path -> module mapping.
	Allow args to be passed through to modules.
 	Implement basic HTTP authentication via AuthRealms.
	* sconex/StreamTokenizer: Remove unneccecary write() method.
	Send readable events when there is data in its buffer.
	* http/ResponseStream: Read multipart mime http messages.
	* sconex/NullFile: New bit-bucket descriptor.
	* sconex/MimeHeader: New mime header parser and table (from http).
	* sconex/FileDir: Make name return a string not a path, more obvious.
	* sconex/FilePath: Add rmdir and rmfile methods.
	* exec: Set working directory when launching.
	* sconesite: Experimental new http website module.

2009-03-25 Andrew Wedgbury <wedge@sconemad.com>

	* http: Remove bothersome FS tree, replace with simpler model based
	on the actual filesystem. Eliminates issues when running multithreaded!
	Fix dependent modules: exec, getfile, dirindex, errorpage.
	* http/MessageStream: Tidy connect method, delegate to Host, DocRoot.
	* sconex/ArgProc: Allow copying of ArgProc objects.
	* sconex/Arg: Copy passed ArgProc when creating ArgSub objects.
	Fixes issues with recursive calls.
	* sconex/Descriptor: Fix Opened flag issue when stream returns Close
	immediately when opened (as http::MessageStream can).
	* lettuce: Update command stream protocol.

2009-01-26 Andrew Wedgbury <wedge@sconemad.com>

	* http: Allow host config files.
	* lettuce: New module for lettuce project, incl media streaming.

2007-10-29 Andrew Wedgbury <wedge@sconemad.com>

	* router/RouterChain: Support "listening" on datagram sockets.
	* router/ListenerSocket: Extra checks to ensure stream sockets.
	* sconex/DatagramSocket: New socket class for datagrams.
	* sconex/DatagramChannel: New virtual descriptor for datagram channels.
	* sconex/DatagramMultiplexer: Datagram channel splitter.
	* sconex/Descriptor: Allow "virtual" descriptors with events.
	* sconex/Multiplexer: Handle virtual descriptors.
	* sconex/Console: Always set non-blocking.

2007-08-23 Andrew Wedgbury <wedge@sconemad.com>

	* http/FSDirectory: Use mutex when build() is updating dir tree.
	* sconex/ArgProx: Fix array index op.
	* sconex/Arg: Call base op from Arg classes if not handled.
	Implement base op with general logic operations.
	Experimental new subroutine argument passing.

2007-08-22 Andrew Wedgbury <wedge@sconemad.com>

	* Fix a few trivial compile errors [GCC-4.1.2]

2007-08-03 Andrew Wedgbury <wedge@sconemad.com>

	* http/errorpage: Fix closing stream if no http body is to be sent.

2007-08-01 Andrew Wedgbury <wedge@sconemad.com>

	* http/MessageStream: Set correct status codes for basic errors.
	* sconex/Multiplexer: Correct spin() return code to detect shutdown.
	* sconex/Arg: Add virtual var_copy(), add subroutine arg ArgSub.
	Implement lvalue (var copy) Args using pointer to original Arg.
	* sconex/ArgScript: Add Name mode, handle 'var' and 'sub' statements.
	* sconex/ArgStatement: Implement copy constructors, virtual new_copy().
	Add ArgStatementVar - local variable declaration.
	Add ArgStatementSub - subroutine declaration using ArgSub.
	* sconex/ArgProc: Add new lvalue operators.
	* sconex/Console: Don't set console non-blocking.
	* test/ArgTest: Read script from file, use error descriptor for errors.

2007-07-25 Andrew Wedgbury <wedge@sconemad.com>

	* sconex/ModuleLoader: Make module ref/load/unloading threadsafe.
	* http/ConnectionStream: Move request module handing to MessageStream.
	* http/MessageStream: Load req module, fall back to error module.
	* http/Request: Store profile name as MessageStream needs it.
	* http/ResponseStream: Pass MessageStream to send method.
	* getfile: Don't write error html, errorpage now does this.
	* dirindex: Don't write error html, errorpage now does this.
	Use 'allow_list' param to enable/disable dir listings.
	* errorpage: Generate error page html based on templates.

2007-07-14 Andrew Wedgbury <wedge@sconemad.com>

	* sconex/Arg: Add missing ops and unit tests.

2007-06-08 Andrew Wedgbury <wedge@sconemad.com>

	* sconex/Buffer: Add some useful insertion/deletion methods.
	* sconex/Stream: Add stream_status(), allowing streams to report.
	* sconex/TermBuffer: Experimental new termios buffer (not working yet).

2007-03-08 Andrew Wedgbury <wedge@sconemad.com>

	* sconex/Kernel: Add script interface to system information.
	* bluetooth: Fix channel number setting.
	* ip+ip6: Fix setting address from string validity.
	* sconex/Descriptor: Add event_connecting and handle connecting state.
	* sconex/Socket: Determine local addr when connecting.
	* sconex/StreamSocket: Allow non-blocking connects.
	* forward: New module - connection forwarding.

2006-10-24 Andrew Wedgbury <wedge@sconemad.com>

	* sconex/Multiplexer: Allow resizing thread pool, and switching back
	into single threaded (multiplexed) operation.
	* sconex/Kernel: Add thread pool configuration.
	* sconex/Multiplexer: Do immediate select when send events are present.
	* doc: Add set_user and set_thread_pool to kernel module docs.

2006-10-12 Andrew Wedgbury <wedge@sconemad.com>

	* exec/ExecStream: Fix leak of m_args.
	* sconex/LineBuffer: Fix bug when breaking between \r and \n pairs.
	* sconex/Logger: Make logging thread safe using a mutex.
	* sconex/Stream: Streamline event mask system.
	* sconex/Descriptor: Streamline new event mask system.
	* sconex/DescriptorThread: New descriptor event dispatch thread.
	* sconex/Multiplexer: Use new multi-threaded event dispatch system.

2006-06-22 Andrew Wedgbury <wedge@sconemad.com>

	* sconex/VersionTag: Support extra info in version tags.

2006-06-21 Andrew Wedgbury <wedge@sconemad.com>

	* sconex/User: Add static current() method to get current user.
	* sconex/Process: Enforce minimum UID & GID when launching processes.
	* exec/ExecStream: Set appropriate user for process launch.
	* configure: Make sure socklen_t is present [Darwin].

2006-06-14 Andrew Wedgbury <wedge@sconemad.com>

	* all: Strip out all Win32 code - this is no longer a supported
	platform.

2006-06-13 Andrew Wedgbury <wedge@sconemad.com>

	* all: Update Win32 project files.
	* sconex/Process: Some Win32 updates.
	* testbuilder/scripts: Make tarball script work on OpenBSD.
	* sconex/Process: Reverse setuid/setgid order so the second call works.
	* sconex/User: Reverse setuid/setgid order so the second call works.

2006-06-04 Andrew Wedgbury <wedge@sconemad.com>

	* sconex/Arg: Guard against integer divide by zero in ArgInt.

2006-06-03 Andrew Wedgbury <wedge@sconemad.com>

	* doc: Fix doctype headers and image links.
	* sconex/Mutex: Add ConditionEvent, ReaderWriterLock (Win32 TODO).
	* testbuilder: Add testbuilder scripts.

2006-05-27 Andrew Wedgbury <wedge@sconemad.com>

	* sconex/ModuleLoaderDLL: Rationalise module search paths.
	* sconex/Module: Look in several places for module config file.
	* sconex/Module: Don't allow resolve calls to descend module trees.
	* sconex/ArgObject: Improve structure of function and log methods.
	* getfile: Access mime module via kernel instead of evaluation.

2006-05-23 Andrew Wedgbury <wedge@sconemad.com>

	* http/ResponseStream: Check HTTP Message is valid.
	* testbuilder/ControlStream: Check HTTP Message is valid, add doc link.
	* testbuilder/BuildStrep: Fix command argument parsing error.
	* doc: Fix some broken links, improve http, add testbuilder section.

2006-05-23 Andrew Wedgbury <wedge@sconemad.com>

	* sconex/FilePath: Add chown method.
	* testbuilder/Build: Chown build directory to build user.
	* exec/ExecStream: Set user when launching process.
	* sconex/Process: Use setuid/setgid to set user/group.

2006-05-22 Andrew Wedgbury <wedge@sconemad.com>

	* testbuilder: Fully integrate new module into sconeserver tree.
	* http/FSDirectory: Add parameters.
	* dirindex: Use default_page parameter on FSDirectory.
	* http/ResponseStream: New HTTP response base/util class.

2006-05-21 Andrew Wedgbury <wedge@sconemad.com>

	* sconex/Descriptor: Make timeout mechanism more usable.
	* sconex/TimeDate: Split into separate files for Time and Date.
	* sconex/Process: Allow launch directory to be set, improve debug logs.
	* sconex/FilePath: Add mkdir.
	* sconex/Module: Recurse get_module calls down the module tree.
	* sconex/Process: Call event_create when process socketpair connects.
	* sconex/Kernel: Add system info methods.
	* sconex/TimeDate: Add dcode() method.
	* sconex/User: New class to represent a system user.

2006-05-12 Andrew Wedgbury <wedge@sconemad.com>

	* sconex/Process: Get process proxy to work on solaris, netbsd, etc.

2006-05-11 Andrew Wedgbury <wedge@sconemad.com>

	* sconex/Process: Implement fork+exec process proxy for forking from a
	multithreaded SconeServer process. Process is now a socket.
	* sconex/Kernel: Init process proxy on startup.
	* exec: Use new Process interface, move signal handler to proxy.
	* testbuilder: Outlined new module for implementing test build system.

2006-05-05 Andrew Wedgbury <wedge@sconemad.com>

	* sconex/Process: Factor out code from exec, implement Win32 version.
	* exec/ExecStream: Use new Process class in sconex.
	* all: Add sysconf_DATA to EXTRA_DIST in makefiles.

2006-05-03 Andrew Wedgbury <wedge@sconemad.com>

	* all: Migrate project to subversion.

2006-05-03 Andrew Wedgbury <wedge@sconemad.com>

	* getfile: Send Forbidden if file cannot be opened.
	* sconex/Kernel: Add set_user method to set effective user/group ids.

2006-05-01 Andrew Wedgbury <wedge@sconemad.com>

	* http: Implement "remove" arg methods for Host and HostMapper.
	* http/ConnectionStream: Improve logging of requests.
	* http/ConnectionStream: Check for bad hosts/profiles and log.

2006-04-30 Andrew Wedgbury <wedge@sconemad.com>

	* http/DocRoot: New class to represent an http document root.
	* http: Add http profiles, which is used to select docroot on host.
	* http/Request: Set protocol method on Uri (http/https).
	* sconex: Improve comments in headers.

2006-04-25 Andrew Wedgbury <wedge@sconemad.com>

	* http/FSDirectory: Fix segfault in build() when dir entry deleted.
	* exec/ExecStream: Pass HTTP cookie to CGI process.
	* dirindex: Prevent recursive redirect when listing root directory.

2006-04-21 Andrew Wedgbury <wedge@sconemad.com>

	* exec/ExecStream: Eliminate framework calls after fork() in child
	process, in an attempt to reduce page copying before exec.
	* exec/ExecStream: Setup environment for running HTTP CGI programs.
	* sconex/StreamTransfer: Only enable events when really required.
	* http/MessageStream: Ensure message body is read correctly for POSTs.
	* http/ConnectionStream: Don't mess with POST data anymore.
	* sconex/Debug: Add debug macros for descriptors and streams.
	* sconex/SocketAddress: Add Anon socket address.
	* sconex/StreamSocket: Use Anon addresses for socketpair endpoints.
	* all: Remove compiler warnings in event selects.

2006-04-05 Andrew Wedgbury <wedge@sconemad.com>

	* sconex/MimeType: new MimeType Arg class and unit test.
	* sconex/Descriptor: allow events to cancel closing.
	* http/MessageStream: chunked transfer encoding for HTTP/1.1.
	* http/HTTPStream: renamed ConnectionStream, as it does connections.
	* sconex/TimeDate: fix table init problem in TimeZone.
	* sconex/Stream: proper enum event type, update all stream classes.
	* sconex/Descriptor: allow streams to inject events in dispatch.
	* exec: add proper exec stream to monitor spawned process.
	* doc: moved example code to doc/examples to avoid install error.
	* doc: flatten compiled docs into one directory to be installable.

2006-03-15 Andrew Wedgbury <wedge@sconemad.com>

	* sconex/Buffer: add push_string to simplify buffering std::strings.
	* sconex/Descriptor: check if already closed on dispatch (for File)
	* sconex/File: set descriptor status when opening/closing.
	* sconex/Stream: add find_stream to locate preceeding streams by name.
	* sconex/StreamPump: removed, replacd with StreamTransfer.
	* sconex/StreamTransfer: new duplexable event driven transfer stream.
	* sconex/TimeDate: fixed off-by-one problem with months.
	* sconex/Uri: new uniform resource identifier Arg class and unit test.
	* http/MessageStream: new dedicated response header manager stream.
	* http/HeaderTable: new shared header store with case logic.
	* http/HTTPStream: factored out parsing into Request and Uri.
	* http/Request: moved parsing from HTTPStream.
	* http/getfile: use new MessageStream and StreamTransfer classes.
	* http/errorpage: use new MessageStream and StreamTransfer classes.
	* http/dirindex: use new MessageStream and StreamTransfer classes.
	* router: tidied, removed unused parameters from chain and listener.
	* exec: new external program execution module (*NIX only at present).

2006-01-12 Andrew Wedgbury <wedge@sconemad.com>

	* doc: build example code along with everything else - this should
	make sure it stays upto date.
	* doc: add rot13 example module, demonstrating simple use of streams.

2005-12-19 Andrew Wedgbury <wedge@sconemad.com>

	* sconed: [WIN32] read paths from registry on startup.
	* doc: improve router docs, add docs for all new router plugins.

2005-12-15 Andrew Wedgbury <wedge@sconemad.com>

	* all: replace ARGx::cast with dynamic_cast.
	* test/ArgTest: standalone SconeScript test app.
	* etc: update config file syntax (add ';' to statement ends).
	* sconex/ConfigFile: use ArgScript to parse config files.
	* sconex/ArgScript: a proper SconeScript statement parser/engine.
	* sconex/ArgStatement: SconeScript statement classes.

2005-11-28 Andrew Wedgbury <wedge@sconemad.com>

	* all: remove autom4te.cache and make sure it is removed in autogen.
	* sconex/Multiplexer: force exit when there are no descriptors.
	* sconex/Module: check for existing module when loading new one,
	better default paths for sub-modules.
	* all: tidy up and add more helpful comments to conf files.
	* bluetooth: new router protocol module for bluetooth - rfcomm only
	for now.
	* test: 'localterm' perl script for testing local sockets.
	* local: new router protocol module for local (aka UNIX domain).
	* ip6: new router protocol module for IPv6.
	* ip: new router protocol module for IP (v4).
	* sconex/Socket: Use pointer to SocketAddress.
	* sconex/SocketAddress: make abstract and not IP 4 specific.

2005-11-16 Andrew Wedgbury <wedge@sconemad.com>

	* all: backed up as sconeserver-0.5.9.
	* sconex: use pointers for complex globals/statics to work around
	runtime issues on solaris.
	* sconex: Fix range bug in FilePath::normalize().
	* all: update win32 build files.
	* all: portability checks run on all available systems.

2005-11-09 Andrew Wedgbury <wedge@sconemad.com>

	* all: backed up as sconeserver-0.5.8.
	* test: access instance counts from test using 'test.counts'.
	* sconex: rewrote debug: asserts, logging and instance counting.
	* sconex: add 'level' code to logging system.
	* sconex: move all FS classes to http.
	* sconex: FS update tracking, split confusing path(bool) method.
	* http: new Status class for managing HTTP status codes.
	* errorpage: new http module for generating error pages.
	* http: fix pipelining problems observed with Firefox.
	* getfile: new http module for transfers, split out from Request.
	* http: standardise http modules, Request now passed as Arg*.

2005-08-15 Andrew Wedgbury <wedge@sconemad.com>

	* all: backed up as sconeserver-0.5.7.
	* simple: add support for discard, chargen and time protocols.
	* router: create new module from ConnectionMapper and MapChain.
	* sconex: move sconed/SconeServer to sconex/Kernel.
	* sconex: new class: MemFile - a memory based file + unit test.
	* sconex: new unit test for LineBuffer.
	* sconex: new unit test for Buffer.
	* sconex: new unit test for TimeDate.
	* sconex: improve timezone support, understand names like "PST".
	* sconex: new unit test for VersionTag.
	* sconex: unit test framework.

2005-07-05 Andrew Wedgbury <wedge@sconemad.com>

	* all: backed up as sconeserver-0.5.6.
	* doc: overhaul docs, add and test simple example module.
	* sconed: sort out command line options.
	* all: fix installation paths and run distcheck.
	* all: clean up function, property and sub-object arg types.
	* sconex: make SocketAddress an Arg class.
	* dirindex: new dir/index module for HTTP.
	* stat: add connection counter.
	* sconex: make VersionTag an Arg class.

2005-06-05 Andrew Wedgbury <wedge@sconemad.com>

	* all: backed up as sconeserver-0.5.5.
	* http: improve HostMapper support for Arg system.
	* sconex: allow all ArgObjects to log messages.
	* sconex: make FS system use FileDir and ArgSystem, auto update tree.
	* sconex: new directory enumerator - FileDir.
	* sconex: new file stat class - FileStat.
	* sconex: proper scope resolution in arg system.

2005-04-07 Andrew Wedgbury <wedge@sconemad.com>

	* all: backed up as sconeserver-0.5.4.
	* all: configurable localised path settings for modules.
	* sconex: module configuration loading.
	* sconex: timezone support in TimeDate.
	* all: win32 build check and support running as a service.
	* mime: add MIME module - move functionality from scx::File.
	* ssl: SSL Multiple configuration channels.

2005-01-10 Andrew Wedgbury <wedge@sconemad.com>

	* all: backed up as sconeserver-0.5.3.
	* sconed: arg methods for connection mapper and map chains.
	* sconed: simplify map chains, add builtin 'default' modules.
	* sconed: wrote Console class for foreground config mode.

2004-12-27 Andrew Wedgbury <wedge@sconemad.com>

	* all: backed up as sconeserver-0.5.2.
	* stat: new module for channeled data statistics.
	* simple: new module for simple TCP/IP services. eg. echo, timeofday.
	* sconex: new byte buffer class, improving StreamBuffer and StreamPump.
	* all: give all modules standard info() methods.
	* sconex: new threading classes using pthreads/Win32 threads.

2004-07-05 Andrew Wedgbury <wedge@sconemad.com>

	* all: backed up as sconeserver-0.5.1.
	* sconex: module functions for loading sub-modules.
	* sconex: remove ConnectionModule, move functionality to Module.
	* sconex: ConfigStream arg interpreter.

2004-05-22 Andrew Wedgbury <wedge@sconemad.com>

	* sconex: new system for module configuration.
	* all: remove scx::Node and scx::MappedNode.

2004-04-16 Andrew Wedgbury <wedge@sconemad.com>

	* all: backed up as sconeserver-0.5.0.
	* general: restructure into a proper GNU style project using
	autoconf, automake and libtool.

2003-12-22 Andrew Wedgbury <wedge@sconemad.com>

	* all: 0.4.0 test release.

2003-10-20 Andrew Wedgbury <wedge@sconemad.com>

	* sconex: new descriptor-stream event system.

2003-04-04 Andrew Wedgbury <wedge@sconemad.com>

	* general: code tidy, source directories, namespaces.
	* sconex: improvements to plugin system.
	* http: experimenting with virtual directory layer.

2002-07-05 Andrew Wedgbury <wedge@sconemad.com>

	* all: 0.3.0 test release.

2002-06-24 Andrew Wedgbury <wedge@sconemad.com>

	* sconed: expanded connection mapping to allow multiple modules.
	* general: other test modules written.
	* general: extensive testing.

2002-02-01 Andrew Wedgbury <wedge@sconemad.com>

	* all: 0.2.0 test release.

2002-02-21 Andrew Wedgbury <wedge@sconemad.com>

	* sconed: restructured configuration system, dynamic map building.

2001-12-01 Andrew Wedgbury <wedge@sconemad.com>

	* ssl: basic SSL stream pipe using OpenSSL BIO.

2001-11-15 Andrew Wedgbury <wedge@sconemad.com>

	* all: 0.1.0 test release.

2001-11-14 Andrew Wedgbury <wedge@sconemad.com>

	* http: new HTTP test module working.

2001-05-07 Andrew Wedgbury <wedge@sconemad.com>

	* sconex: wrote buffered stream transfer manager.

2001-04-12 Andrew Wedgbury <wedge@sconemad.com>

	* sconex: wrote stream tokenizer.

2001-03-15 Andrew Wedgbury <wedge@sconemad.com>

	* sconed: wrote connection mapping subsystem.

2001-02-01 Andrew Wedgbury <wedge@sconemad.com>

	* sconex: wrote basic stream classes.

2000-11-26 Andrew Wedgbury <wedge@sconemad.com>

	* sconex: wrote Win32/Linux dynamic module loader.

2000-07-09 Andrew Wedgbury <wedge@sconemad.com>

	* general: Project started.
